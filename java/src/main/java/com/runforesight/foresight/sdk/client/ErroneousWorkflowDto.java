/*
 * Foresight Private REST API
 * \"Foresight Private REST API for clients\"
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: info@runforesight.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.runforesight.foresight.sdk.client;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.runforesight.foresight.sdk.client.RepoDto;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.HashMap;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ErroneousWorkflowDto
 */
@JsonPropertyOrder({
  ErroneousWorkflowDto.JSON_PROPERTY_ERROR_COUNTS,
  ErroneousWorkflowDto.JSON_PROPERTY_ID,
  ErroneousWorkflowDto.JSON_PROPERTY_NAME,
  ErroneousWorkflowDto.JSON_PROPERTY_REPO,
  ErroneousWorkflowDto.JSON_PROPERTY_TOTAL_ERROR_COUNT
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-01-31T12:24:20.857460Z[Etc/UTC]")
public class ErroneousWorkflowDto {
  public static final String JSON_PROPERTY_ERROR_COUNTS = "errorCounts";
  private Map<String, Long> errorCounts = null;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_REPO = "repo";
  private RepoDto repo;

  public static final String JSON_PROPERTY_TOTAL_ERROR_COUNT = "totalErrorCount";
  private Long totalErrorCount;

  public ErroneousWorkflowDto() {
  }

  public ErroneousWorkflowDto errorCounts(Map<String, Long> errorCounts) {
    
    this.errorCounts = errorCounts;
    return this;
  }

  public ErroneousWorkflowDto putErrorCountsItem(String key, Long errorCountsItem) {
    if (this.errorCounts == null) {
      this.errorCounts = new HashMap<>();
    }
    this.errorCounts.put(key, errorCountsItem);
    return this;
  }

   /**
   * Get errorCounts
   * @return errorCounts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ERROR_COUNTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, Long> getErrorCounts() {
    return errorCounts;
  }


  @JsonProperty(JSON_PROPERTY_ERROR_COUNTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setErrorCounts(Map<String, Long> errorCounts) {
    this.errorCounts = errorCounts;
  }


  public ErroneousWorkflowDto id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public ErroneousWorkflowDto name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public ErroneousWorkflowDto repo(RepoDto repo) {
    
    this.repo = repo;
    return this;
  }

   /**
   * Get repo
   * @return repo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_REPO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RepoDto getRepo() {
    return repo;
  }


  @JsonProperty(JSON_PROPERTY_REPO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRepo(RepoDto repo) {
    this.repo = repo;
  }


  public ErroneousWorkflowDto totalErrorCount(Long totalErrorCount) {
    
    this.totalErrorCount = totalErrorCount;
    return this;
  }

   /**
   * Get totalErrorCount
   * @return totalErrorCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TOTAL_ERROR_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getTotalErrorCount() {
    return totalErrorCount;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_ERROR_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalErrorCount(Long totalErrorCount) {
    this.totalErrorCount = totalErrorCount;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ErroneousWorkflowDto erroneousWorkflowDto = (ErroneousWorkflowDto) o;
    return Objects.equals(this.errorCounts, erroneousWorkflowDto.errorCounts) &&
        Objects.equals(this.id, erroneousWorkflowDto.id) &&
        Objects.equals(this.name, erroneousWorkflowDto.name) &&
        Objects.equals(this.repo, erroneousWorkflowDto.repo) &&
        Objects.equals(this.totalErrorCount, erroneousWorkflowDto.totalErrorCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(errorCounts, id, name, repo, totalErrorCount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ErroneousWorkflowDto {\n");
    sb.append("    errorCounts: ").append(toIndentedString(errorCounts)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    repo: ").append(toIndentedString(repo)).append("\n");
    sb.append("    totalErrorCount: ").append(toIndentedString(totalErrorCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


/*
 * Foresight Private REST API
 * \"Foresight Private REST API for clients\"
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: info@runforesight.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.runforesight.foresight.sdk.client;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.runforesight.foresight.sdk.client.BranchDto;
import com.runforesight.foresight.sdk.client.WatchedRepoFilterDto;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * WorkflowHighlightsQueryDto
 */
@JsonPropertyOrder({
  WorkflowHighlightsQueryDto.JSON_PROPERTY_BRANCHES,
  WorkflowHighlightsQueryDto.JSON_PROPERTY_PROJECT_ID,
  WorkflowHighlightsQueryDto.JSON_PROPERTY_REPOS,
  WorkflowHighlightsQueryDto.JSON_PROPERTY_SIZE,
  WorkflowHighlightsQueryDto.JSON_PROPERTY_TIME_RANGE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-01-31T12:24:20.857460Z[Etc/UTC]")
public class WorkflowHighlightsQueryDto {
  public static final String JSON_PROPERTY_BRANCHES = "branches";
  private List<BranchDto> branches = null;

  public static final String JSON_PROPERTY_PROJECT_ID = "projectId";
  private String projectId;

  public static final String JSON_PROPERTY_REPOS = "repos";
  private List<WatchedRepoFilterDto> repos = null;

  public static final String JSON_PROPERTY_SIZE = "size";
  private Integer size;

  public static final String JSON_PROPERTY_TIME_RANGE = "timeRange";
  private String timeRange;

  public WorkflowHighlightsQueryDto() {
  }

  public WorkflowHighlightsQueryDto branches(List<BranchDto> branches) {
    
    this.branches = branches;
    return this;
  }

  public WorkflowHighlightsQueryDto addBranchesItem(BranchDto branchesItem) {
    if (this.branches == null) {
      this.branches = new ArrayList<>();
    }
    this.branches.add(branchesItem);
    return this;
  }

   /**
   * Get branches
   * @return branches
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_BRANCHES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<BranchDto> getBranches() {
    return branches;
  }


  @JsonProperty(JSON_PROPERTY_BRANCHES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBranches(List<BranchDto> branches) {
    this.branches = branches;
  }


  public WorkflowHighlightsQueryDto projectId(String projectId) {
    
    this.projectId = projectId;
    return this;
  }

   /**
   * Get projectId
   * @return projectId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PROJECT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getProjectId() {
    return projectId;
  }


  @JsonProperty(JSON_PROPERTY_PROJECT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProjectId(String projectId) {
    this.projectId = projectId;
  }


  public WorkflowHighlightsQueryDto repos(List<WatchedRepoFilterDto> repos) {
    
    this.repos = repos;
    return this;
  }

  public WorkflowHighlightsQueryDto addReposItem(WatchedRepoFilterDto reposItem) {
    if (this.repos == null) {
      this.repos = new ArrayList<>();
    }
    this.repos.add(reposItem);
    return this;
  }

   /**
   * Get repos
   * @return repos
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_REPOS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<WatchedRepoFilterDto> getRepos() {
    return repos;
  }


  @JsonProperty(JSON_PROPERTY_REPOS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRepos(List<WatchedRepoFilterDto> repos) {
    this.repos = repos;
  }


  public WorkflowHighlightsQueryDto size(Integer size) {
    
    this.size = size;
    return this;
  }

   /**
   * Get size
   * @return size
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getSize() {
    return size;
  }


  @JsonProperty(JSON_PROPERTY_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSize(Integer size) {
    this.size = size;
  }


  public WorkflowHighlightsQueryDto timeRange(String timeRange) {
    
    this.timeRange = timeRange;
    return this;
  }

   /**
   * Get timeRange
   * @return timeRange
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TIME_RANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTimeRange() {
    return timeRange;
  }


  @JsonProperty(JSON_PROPERTY_TIME_RANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTimeRange(String timeRange) {
    this.timeRange = timeRange;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WorkflowHighlightsQueryDto workflowHighlightsQueryDto = (WorkflowHighlightsQueryDto) o;
    return Objects.equals(this.branches, workflowHighlightsQueryDto.branches) &&
        Objects.equals(this.projectId, workflowHighlightsQueryDto.projectId) &&
        Objects.equals(this.repos, workflowHighlightsQueryDto.repos) &&
        Objects.equals(this.size, workflowHighlightsQueryDto.size) &&
        Objects.equals(this.timeRange, workflowHighlightsQueryDto.timeRange);
  }

  @Override
  public int hashCode() {
    return Objects.hash(branches, projectId, repos, size, timeRange);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WorkflowHighlightsQueryDto {\n");
    sb.append("    branches: ").append(toIndentedString(branches)).append("\n");
    sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
    sb.append("    repos: ").append(toIndentedString(repos)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    timeRange: ").append(toIndentedString(timeRange)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

